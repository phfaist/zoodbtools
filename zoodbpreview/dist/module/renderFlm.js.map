{"mappings":"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","sources":["zoodbpreview/renderFlm.js"],"sourcesContent":["import debugm from 'debug';\nconst debug = debugm('zoodbpreview.renderFlm');\n\nimport html_escape from 'escape-html';\n\nimport * as zooflm from '@phfaist/zoodb/zooflm';\nimport { getfield } from '@phfaist/zoodb/util/getfield';\nimport { iter_object_fields_recursive } from '@phfaist/zoodb/util/objectinspector';\nimport { sqzhtml } from '@phfaist/zoodb/util/sqzhtml';\nimport { split_prefix_label } from '@phfaist/zoodb/util/prefixlabel';\n\nimport mime from 'mime-types';\n\n\n// -----------------------------------------------------------------------------\n\n\nexport function installFlmContentStyles(documentObject)\n{\n    documentObject ??= window.document;\n\n    const styinfo = zooflm.html_fragmentrenderer_get_style_information(\n        new zooflm.ZooHtmlFragmentRenderer()\n    );\n    const styElement = documentObject.createElement('style');\n    styElement.setAttribute('type', 'text/css');\n    styElement.innerText = `\n/* FLM - global */\n${ styinfo.css_global }\n/* FLM - content */\n${ styinfo.css_content }\n`;\n    documentObject.head.appendChild(styElement);\n\n    return styElement;\n}\n\n\n// -----------------------------------------------------------------------------\n\n\nexport function installZooFlmEnvironmentLinksAndGraphicsHandlers(\n    zoo_flm_environment,\n    { getGraphicsFileContents }\n)\n{\n    zoo_flm_environment.graphics_collection.src_url_resolver_fn =\n        ({graphics_resource, render_context, source_path}) => {\n\n            const resolvedSourcePath = graphics_resource.source_info.resolved_source;\n\n            const imageData = getGraphicsFileContents(\n                resolvedSourcePath,\n                { graphics_resource, render_context, source_path }\n            );\n            let mimeType = mime.lookup(resolvedSourcePath);\n            if (!mimeType) { mimeType = 'image/*'; }\n            const blob = new Blob([ imageData ], { type: mimeType });\n\n            const src_url = URL.createObjectURL(blob);\n\n            debug(`created Blob Object Url ${src_url} for ${resolvedSourcePath} with mime type ${mimeType}`);\n\n            if (render_context.registerRenderPreviewCleanupCallback != null) {\n                render_context.registerRenderPreviewCleanupCallback(\n                    () => {\n                        URL.revokeObjectURL(src_url);\n                        debug(`revoked Blob Object Url ${src_url}`);\n                    }\n                );\n            } else {\n                console.warn(\n                    `Allocated a Blob URL with URL.createObjectURL(), but there was no `\n                    + `registerRenderPreviewCleanupCallback set to register the URL `\n                    + `to be revoked/freed after use`\n                );\n            }\n\n            return { src_url };\n        }\n    ;\n\n    //\n    // Override links to other objects, so we can intercept them.\n    //\n    zoo_flm_environment.ref_resolver.target_href_resolver =\n        (ref_instance, render_context) => {\n\n            const { target_href, ref_type, ref_label } = ref_instance ?? {};\n\n            if (target_href != null) {\n                // maybe fix target_href?\n                const url = new URL(target_href);\n                if (url.protocol == 'zoodbobjectref:') {\n                    // this is a reference set by zoodb/zooflm/zooprocessor.js\n                    //\n                    // [Note, we seem to get all the slashes as part of the\n                    // pathname in \"protocol:///code/ref\" when running in the\n                    // browser]\n                    const objectRef = url.pathname.replace(/^\\/+/, '');\n\n                    const [objectType, objectId] = split_prefix_label(objectRef);\n                    let qData = {\n                        objectType, objectId,\n                    };\n                    if (url.hash && url.hash.startsWith('#')) {\n                        qData.anchor = decodeURIComponent(url.hash.slice(1));\n                    }\n                    return (`jsOnLinkClick:objectLink`\n                            + `?q=${encodeURIComponent(JSON.stringify(qData))}`);\n                }\n                return target_href;\n            }\n            \n            const alertMsg = `Could not resolve link reference to ‘${ref_type}:${ref_label}’`;\n            return(`javascript:alert(${JSON.stringify(alertMsg)}`);\n        }\n    ;\n\n}\n\n\n\n// -----------------------------------------------------------------------------\n\n\nexport function simpleRenderObjectWithFlm({\n    zoodb, objectType, objectId, object,\n    registerRenderPreviewCleanupCallback,\n})\n{\n    const zoo_flm_environment = zoodb.zoo_flm_environment;\n\n    const schema = zoodb.schemas[objectType];\n\n    debug(`renderObject(): ${objectType} ${objectId}`);\n\n    const render_doc_fn = (render_context) => {\n        const R = zooflm.make_render_shorthands({render_context});\n        const { ne, rdr, ref } = R;\n\n        render_context.registerRenderPreviewCleanupCallback =\n            registerRenderPreviewCleanupCallback;\n\n        let html = `<article class=\"object_render\">`;\n\n        html += sqzhtml`\n<h1>Object: ${html_escape(objectType)} <code>${html_escape(objectId)}</code></h1>\n`;\n\n        for (const {fieldname, fieldvalue, fieldschema}\n             of iter_object_fields_recursive(object, schema)) {\n            if (fieldvalue == null) {\n                continue;\n            }\n            let rendered = null;\n            try {\n                rendered = rdr(fieldvalue);\n            } catch (err) {\n                let errstr = null;\n                if (!err) { errstr = '??'; }\n                else if (typeof err === 'object' && '__class__' in err && 'msg' in err) {\n                    errstr = err.msg; //zooflm.repr(err);\n                } \n                else if (typeof err === 'object' && 'toString' in err) {\n                    errstr = ''+err;\n                }\n                else {\n                    errstr = '???';\n                }\n                rendered = `<span class=\"error\">(Render error: ${html_escape(errstr)})</span>`;\n            }\n            html += sqzhtml`\n<h2 class=\"fieldname\">${html_escape(fieldname)}</h2>\n<div class=\"fieldcontent\">\n${ rendered }\n</div>\n`;\n        }\n\n        html += `\n\n<RENDER_ENDNOTES/>\n\n`;\n        html += `</article>`;\n        return html;\n    };\n\n    let htmlContent = zooflm.make_and_render_document({\n        zoo_flm_environment,\n        render_doc_fn,\n        //doc_metadata,\n        render_endnotes: true,\n        flm_error_policy: 'continue',\n    });\n\n    return {\n        htmlContent,\n    };\n}\n\n"],"names":[],"version":3,"file":"renderFlm.js.map"}